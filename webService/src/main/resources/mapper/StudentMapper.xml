<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qst.Dao.StudentMapper">
	<resultMap id="BaseResultMap" type="com.qst.bean.Student">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
	</resultMap>

	<resultMap id="BaseResultMapwithDMP"
		type="com.qst.bean.Student">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
		<association property="department"
			javaType="com.qst.bean.Department">
			<id column="did" property="id" />
			<result column="dep_name" property="depName" />
		</association>
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, email, d_id
	</sql>
	<sql id="Base_Column_ListwithDEP">
		s.id, s.name, s.email, s.d_id , d.id did, d.dep_name
	</sql>

	<select id="selectByExample"
		parameterType="com.qst.bean.StudentExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tb_stu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_stu
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!-- List<Student> selectByExamplewithDEP(StudentExample example); Student 
		selectByPrimaryKeywithDEP(Integer id); -->

	<select id="selectByPrimaryKeywithDEP"
		parameterType="java.lang.Integer" resultMap="BaseResultMapwithDMP">
		select
		<include refid="Base_Column_ListwithDEP" />
		from tb_stu s join tb_dep d on s.d_id = d.id
		where s.id = #{id,jdbcType=INTEGER}
	</select>


	<select id="selectByExamplewithDEP"
		parameterType="com.qst.bean.StudentExample" resultMap="BaseResultMapwithDMP">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_ListwithDEP" />
		
		from tb_stu s join tb_dep d on s.d_id = d.id order by s.id asc
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from tb_stu
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.qst.bean.StudentExample">
		delete from tb_stu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.qst.bean.Student">
		insert into tb_stu (id, name, email,
		d_id)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{dId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.qst.bean.Student">
		insert into tb_stu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="dId != null">
				d_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				#{dId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.qst.bean.StudentExample"
		resultType="java.lang.Long">
		select count(*) from tb_stu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tb_stu
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.dId != null">
				d_id = #{record.dId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tb_stu
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		d_id = #{record.dId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.qst.bean.Student">
		update tb_stu
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				d_id = #{dId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.qst.bean.Student">
		update tb_stu
		set name = #{name,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		d_id = #{dId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>